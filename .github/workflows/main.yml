# Main release workflow
name: Main

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the develop branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Repo
        uses: actions/checkout@v2

      # Zips the plugin in WordPress uploadable format sans fluff
      - name: Zip Plugin
        run: zip -r wp-backstage.zip . -x ".gitignore" ".editorconfig" "composer.json" "composer.lock" "phpDocumentor.phar" ".git/*" ".github/*" ".phpdoc/*" "docs/*" "vendor/*" "pre-commit"
      
      # Creates a release draft
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: 0.0.0
          release_name: Release Draft
          draft: true
          prerelease: false
      
      # Uploads the plugin to the draft release
      - name: Upload Plugin
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which includes an `upload_url`.
          asset_path: ./wp-backstage.zip
          asset_name: wp-backstage.zip
          asset_content_type: application/zip
